[workspace]

[package]
name = "bbl2csv"
version = "0.1.0"
description = "Ergonomic cli for parsing BetaFlight blackbox logs into csv"
repository = "https://github.com/blackbox-log/bbl2csv"
readme = "README.md"
categories = ["aerospace::drones", "aerospace::unmanned-aerial-vehicles", "command-line-utilities", "parser-implementations"]
keywords = ["blackbox_decode", "betaflight", "blackbox"]
publish = false

license = "GPL-3.0-only"
edition = "2021"
rust-version = "1.81"

[[bin]]
path = "src/main.rs"
name = "bbl2csv"

[dependencies]
exitcode = "1.1.2"
lexopt = "0.3.1"
mimalloc = "0.1.46"
rayon = "1.10.0"
tracing = { version = "0.1.41", default-features = false, features = ["release_max_level_debug"] }

[dependencies.blackbox-log]
version = "0.4.3"
# git = "https://github.com/blackbox-log/blackbox-log"
# path = "../blackbox-log"

[dependencies.tracing-subscriber]
version = "0.3.19"
default-features = false
features = ["smallvec", "fmt", "ansi", "std"]

[target.'cfg(windows)'.dependencies]
output_vt100 = "0.1.3"

[profile.release]
lto = "thin"
opt-level = 3
codegen-units = 1
panic = "abort"
strip = true

[lints.rust]
explicit_outlives_requirements = "warn"
improper_ctypes_definitions = "deny"
macro_use_extern_crate = "warn"
missing_debug_implementations = "warn"
single_use_lifetimes = "warn"
trivial_casts = "deny"
unsafe_code = "deny"
unused_qualifications = "warn"

[lints.clippy]
alloc_instead_of_core = "warn"
allow_attributes = "warn"
as_underscore = "deny"
borrow_as_ptr = "warn"
cast_lossless = "deny"
cast_possible_truncation = "warn"
cast_possible_wrap = "warn"
cast_sign_loss = "warn"
clone_on_ref_ptr = "warn"
cloned_instead_of_copied = "warn"
dbg_macro = "warn"
decimal_literal_representation = "warn"
default_trait_access = "warn"
enum_glob_use = "warn"
equatable_if_let = "warn"
explicit_into_iter_loop = "warn"
explicit_iter_loop = "warn"
filter_map_next = "warn"
flat_map_option = "warn"
from_iter_instead_of_collect = "warn"
get_unwrap = "warn"
if_not_else = "warn"
if_then_some_else_none = "warn"
implicit_clone = "warn"
inconsistent_struct_constructor = "warn"
items_after_statements = "warn"
manual_ok_or = "warn"
manual_string_new = "warn"
map_unwrap_or = "warn"
match_on_vec_items = "warn"
match_same_arms = "warn"
match_wildcard_for_single_variants = "warn"
mismatching_type_param_order = "warn"
multiple_crate_versions = "warn"
multiple_inherent_impl = "warn"
needless_for_each = "warn"
option_if_let_else = "warn"
print_stderr = "warn"
print_stdout = "warn"
redundant_closure_for_method_calls = "warn"
redundant_else = "warn"
return_self_not_must_use = "warn"
semicolon_if_nothing_returned = "warn"
single_match_else = "warn"
stable_sort_primitive = "warn"
str_to_string = "warn"
string_lit_as_bytes = "warn"
todo = "warn"
trait_duplication_in_bounds = "warn"
undocumented_unsafe_blocks = "deny"
unimplemented = "warn"
uninlined_format_args = "warn"
unnecessary_cast = "deny"
unneeded_field_pattern = "warn"
unnested_or_patterns = "warn"
unseparated_literal_suffix = "warn"
use_debug = "warn"
verbose_file_reads = "warn"
wildcard_enum_match_arm = "warn"
